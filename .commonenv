UNAME=$(uname)
source $HOME/.commonfuncs
#source /usr/local/bin/pyenv-sh-virtualenvwrapper
export DATADOG_ROOT="/Users/david.blewett/dd"
export GITLAB_TOKEN=$(security find-generic-password -a ${USER} -s gitlab_token -w)
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.7
export LANG=en_US.UTF-8
export PAGER=less
export LESS="-iRMSx4 -FX"
export DD_API_KEY=$(security find-generic-password -s "DD_API_KEY" -w)
export DD_APP_KEY=$(security find-generic-password -s "DD_APP_KEY" -w)
#export MANPATH=`manpath`
#export RSYNC_ICONV=UTF8-MAC
#export RSYNC_PASSWORD=ruby
#export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home
#export SENCHA_SDK_TOOLS_2_0_0_BETA3=/Applications/SenchaSDKTools-2.0.0-beta3
#export KUBECONFIG=~/.kube/prod-us-west-1.kubeconfig:~/.kube/np-us-west-1.kubeconfig
export GOPATH=~/go
export LDFLAGS="-L/usr/local/opt/openssl/lib $LDFLAGS"
export CPPFLAGS="-I/usr/local/opt/openssl/include $CPPFLAGS"
export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH"

# let's set a proper PATH
#########################

# This is an attempt to use a fancy path generator
# like the one in .zshenv
new_path=""
expected_path=(
  /usr/local/opt/python/libexec/bin
  "$HOME/.pyenv/shims"
  "$HOME/bin/$MACHTYPE-$OSTYPE"
  "$HOME/.cargo/bin"
  "$HOME/bin"
  "$HOME/bin/git_achievements"
  "$HOME/.gem/ruby/1.8/bin"
  "$HOME/Library/Python/3.9/bin"
  /opt/local/apache2/bin
  /opt/python/bin
  /opt/local/bin
  /opt/local/sbin
  /opt/local/lib/postgresql91/bin
  /opt/local/lib/postgresql93/bin
  /opt/local/lib/mysql55/bin
  /sw/bin
  /sw/sbin
  /usr/bin/perlbin/site
  /usr/bin/perlbin/vendor
  /usr/bin/perlbin/core
  /usr/local/bin
  /usr/local/sbin
  /usr/local/etc
  /usr/Programs/bin
  /sbin
  /bin
  /usr/bin
  /usr/sbin
  /usr/ucb
  /usr/bsd
  /usr/libexec
  /Developer/Tools
  /opt/ruby1.8/bin
  /usr/X11R6/bin
  /usr/X11/bin
  /usr/bin/X11
  /usr/local/X11/bin
  /usr/local/contrib/lib/kde/bin
  /usr/local/tex/bin
  /usr/local/lib/zsh/scr
  /usr/local/games
  /usr/games
  /etc
  /Users/davidb/node_modules/bin
  /usr/local/opt/python/libexec/bin
  #"$HOME/.virtualenvs/utils/bin"
  "$HOME/Library/Python/3.7/bin"
  "$HOME/simple/postgres/scripts"
  "$DATADOG_ROOT/devtools/bin"
  "$GOPATH/bin"
  "$HOME/dd/experimental/teams/metrics-query"
  "/usr/local/opt/awscli/bin"
)

for element in "${expected_path[@]}"
do
  if [ -d $element ]; then
    if [ -z $new_path ]; then
      new_path=$element
    else
      new_path=$new_path:$element
    fi
  fi
done

PATH=$new_path
export PATH

# Enable a few things for less (This will also apply to man)
#   * turn off case sensitive search (-I)
#   * display a long prompt with more info (-M)
#   * show colors instead of escape characters (-R)
#export LESS="-IMRR"

# conditionally set the editor variable
#if checkPath mate_wait; then
    # to set this up you need to symlink the mate command
    #   $ cd ~/bin
    #   $ ln -s /path/to/mate mate_wait
#    export EDITOR='mate_wait'
#else
export EDITOR=vim
#fi

# use a fancy terminal
#export TERM=xterm-256color
#export TERM=linux
# get crazy with python, and the cheese whiz
#export PYTHONSTARTUP=$HOME/.pystartup

# prefer to use distribute for virtualenvs
export VIRTUALENV_USE_DISTRIBUTE="TRUE"

export PIP_DOWNLOAD_CACHE="$HOME/.pip_download_cache"

# set up some more OS X specific stuff
if [ $UNAME = "Darwin" ]; then
    # Figure out the major and minor version of OS X
    os_majorversion=$(sw_vers | awk '/ProductVersion/ {print $2}' | cut -f2 -d'.')
    os_minorversion=$(sw_vers | awk '/ProductVersion/ {print $2}' | cut -f3 -d'.')
    
    # to not tar up resource forks, you'll need this
    if [[  $os_majorversion -ge 5 ]]; then
        # Leopard version (and beyond??)
        export COPYFILE_DISABLE="True"
    elif [[ ${os_majorversion} -eq 4 ]] && [[ ${os_minorversion} -ge 6 ]]; then
        # Tiger version
        export COPY_EXTENDED_ATTRIBUTES_DISABLE="True"
    fi

fi

